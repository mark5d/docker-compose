#worker执行的角色
user  nginx; 

#work进程数量与cpu数量相关有几个cpu就有几个worker_processes
worker_processes  2;  

#第一个参数日志地址
#第二个参数debug info notice warn error crit日志级别
#error_log为错误日志
error_log  logs/error.log warn; 

#pid文件地址
#pid logs/nginx.pid

#指令块
events {

    # 默认使用epoll
    use epoll;

    #每个worker允许链接的客户端最大链接数，根据实际硬件配置，配置大反而影响性能
    worker_connections  10240;

}

http {

    #inclue导入外部文件  mine.types为mine类型集合 如application/json
    include mine.types; 

    #默认类型
    default_type application/octet-stream;

    #日志格式
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                 '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for"';

    #日志文件
    access_log logs/access_log main;

    #文件高效传输
    sendfile        on;

    #当数据包累计到一定大小再发送，提升性能但是影响及时性
    #tcp_nopush     on;

    #客户端链接服务器保持链接超时时间单位秒，在65秒不断开链接，设定为0没次请求使用新链接
    keepalive_timeout  65;

    #文件压缩，提升html,css等传输速度，会消耗服务器性能
    #gzip  on;

    #虚拟主机，可以有多个
    server {
        #监听的端口号
        listen 30088; 

        #可以是域名，ip，匹配该设置
        server_name localhost; 

        #路由
        location / {
            root html;
            index index.html index.htm;
        }

        #错误页面 500 502 503 504都显示/50x.html
        error_page 500 502 503 504 /50x.html;

        location /50x.html {
            root html;
        }
    }

    #导入server.conf配置
    include server.conf
}